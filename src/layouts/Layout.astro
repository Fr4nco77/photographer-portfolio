---
import "../styles/global.css";
import "@fontsource/archivo-black";
import "@fontsource-variable/inter";
import Nav from "@components/layout/Nav/Nav.astro";
import Footer from "@components/layout/Footer/Footer.astro";
import { useTranslations } from "@i18n/utils";
import type { languages } from "@i18n/ui";

interface Props {
  title?: string;
  description?: string;
}

const currentLang = Astro.currentLocale as keyof typeof languages;
const { href, origin } = Astro.url;
const { title, description } = Astro.props;
const t = useTranslations(currentLang);

const siteTitle = "Photography";
const pageTitle = [siteTitle, title].filter(Boolean).join(" | ");
---

<!doctype html>
<html lang={currentLang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <link rel="canonical" href={href} />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <title>{pageTitle}</title>
    <script
      type="application/ld+json"
      is:inline
      set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "WebPage",
        name: pageTitle,
        description: description,
        url: href,
        publisher: {
          "@type": "Organization",
          name: siteTitle,
          logo: {
            "@type": "ImageObject",
            url: `${origin}/favicon.svg`,
          },
        },
      })}
    />
    <script is:inline data-astro-rerun>
      (() => {
        const stored = localStorage.getItem("theme");
        const prefersDark = window.matchMedia(
          "(prefers-color-scheme: dark)",
        ).matches;
        const theme = stored || (prefersDark ? "dark" : "light");

        if (theme === "dark") {
          document.documentElement.classList.add("dark");
        } else {
          document.documentElement.classList.remove("dark");
        }
      })();
    </script>
  </head>
  <body>
    <Nav lang={currentLang} t={t} />
    <slot />
    <Footer lang={currentLang} t={t} />
  </body>
</html>

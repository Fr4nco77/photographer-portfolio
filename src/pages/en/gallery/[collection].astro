---
import type { GetStaticPaths } from "astro";
import Layout from "@layouts/Layout.astro";
import Separator from "@components/Separator.astro";
import { Image } from "astro:assets";
import Chevron from "@assets/icons/Chevron.astro";
import Link from "@components/collection/Link.astro";
import type { languages } from "@i18n/ui";
import Arrow from "@assets/icons/Arrow.astro";
import { useTranslations } from "@i18n/utils";
import { getCollection } from "astro:content";

export const getStaticPaths = (async () => {
  const collections = await getCollection("collection");

  return collections.map((collection) => {
    return { params: { collection: collection.id }, props: collection.data };
  });
}) satisfies GetStaticPaths;

const currentLang = Astro.currentLocale as keyof typeof languages;
const { title, category, description, images, prevProject, nextProject } =
  Astro.props;
const t = useTranslations(currentLang);
---

<Layout title={title[currentLang]} description={description[currentLang]}>
  <header class="mx-auto max-w-7xl px-6 pt-24 pb-8 text-center sm:text-start">
    <h1 class="font-title text-4xl tracking-tighter md:text-7xl">
      {title[currentLang]}
    </h1>
    <div class="flex flex-col items-center gap-1 md:flex-row md:gap-4">
      <span class="text-xl font-medium md:text-2xl">
        {category[currentLang]}
      </span>
      <Link lang={currentLang} to={nextProject}>
        {t("collection.next")}
        <Arrow
          styles="size-5 group-hover:translate-x-1 transition-transform duration-300"
        />
      </Link>
    </div>
  </header>
  <Separator />
  <main class="mx-auto max-w-7xl px-6 py-16">
    <div class="space-y-8">
      <div class="grid gap-8 lg:auto-rows-[600px] lg:grid-cols-5">
        <div class="lg:col-span-4">
          <Image
            id="mainImage"
            src={images[0].src}
            alt={images[0].alt[currentLang]}
            width={6016}
            height={4016}
            loading="eager"
            class="h-full rounded-sm object-contain"
          />
        </div>
        <div
          class="relative flex w-full items-center justify-center gap-3 lg:flex-col"
        >
          <!-- Prev -->
          <button
            id="prevBtn"
            aria-label="Prev Image"
            class="bg-secondary text-primary absolute top-auto left-0 z-2 flex animate-pulse cursor-pointer items-center justify-center rounded-full p-2 hover:animate-none lg:top-0 lg:left-auto"
          >
            <span class="block lg:hidden">
              <Chevron styles="size-5 rotate-180" />
            </span>
            <span class="hidden lg:block">
              <Chevron styles="size-5 -rotate-90" />
            </span>
          </button>
          <!-- Slider -->
          <div
            id="slider"
            class="no-scrollbar flex w-full items-center gap-4 overflow-x-auto scroll-smooth lg:flex-col lg:overflow-y-auto"
          >
            {
              images.map(({ src, alt }, index) => (
                <Image
                  src={src}
                  alt={alt[currentLang]}
                  width={144}
                  height={144}
                  loading={index < 4 ? "eager" : "lazy"}
                  class="mini-image aspect-auto w-36 cursor-pointer rounded-sm grayscale-75 transition-all duration-300 ease-in-out hover:scale-105 hover:grayscale-0 lg:w-full"
                  data-image={src}
                />
              ))
            }
          </div>
          <!-- Next -->
          <button
            id="nextBtn"
            aria-label="Next Image"
            class="bg-secondary text-primary absolute right-0 bottom-auto z-2 flex animate-pulse cursor-pointer items-center justify-center rounded-full p-2 hover:animate-none lg:right-auto lg:bottom-0"
          >
            <span class="block lg:hidden">
              <Chevron styles="size-5" />
            </span>
            <span class="hidden lg:block">
              <Chevron styles="size-5 rotate-90" />
            </span>
          </button>
        </div>
      </div>
      <div
        class="bg-secondary bg-secondary text-primary mx-auto max-w-5xl rounded-2xl px-6 py-4 text-base italic md:text-lg"
      >
        <p>{description[currentLang]}</p>
      </div>
    </div>
  </main>
  <Separator />
</Layout>

<script is:inline data-astro-rerun>
  (function () {
    const slider = document.getElementById("slider");
    const prevBtn = document.getElementById("prevBtn");
    const nextBtn = document.getElementById("nextBtn");
    const mainImage = document.getElementById("mainImage");
    const scrollAmount = 150; // distancia a mover en cada click

    function scroll(direction) {
      const isMobile = window.innerWidth < 1024;

      if (isMobile) {
        slider.scrollBy({
          left: direction === "next" ? scrollAmount : -scrollAmount,
          behavior: "smooth",
        });
      } else {
        slider.scrollBy({
          top: direction === "next" ? scrollAmount : -scrollAmount,
          behavior: "smooth",
        });
      }
    }

    prevBtn.addEventListener("click", () => scroll("prev"));
    nextBtn.addEventListener("click", () => scroll("next"));
    document.querySelectorAll(".mini-image").forEach((el) => {
      el.addEventListener("click", () => {
        mainImage.src = el.dataset.image;
      });
    });
  })();
</script>
